#!/bin/bash
#
# Copyright (c) 2020 Red Hat, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# This script should be used to generate the list of test cases from
# the OpenShift e2e conformance suite.
#
# Edit the filter_patterns, exclude_patterns, and skip_patterns variables
# and re-run this script in order to change the tests selection.
#
set -e
set -o nounset

GOPATH=${GOPATH:-$(go env GOPATH)}
script_dir="$(realpath $(dirname $0))"
tests_dir="$script_dir/../../../"
source "$tests_dir/lib/common.bash"
source "$script_dir/../lib.sh"

# Note: for the variables below that hold patterns, use grep-like extended
# regular expressions in quotes.

# Tests that should be included. Leave it empty to pick them all.
filter_patterns=(
        )

# Tests that should be excluded.
exclude_patterns=(
        )

# Tests that would normally be executed but due to some issue they should not.
skip_patterns=(
        )

# Define temporary files and write down the patterns.
#
inclusion_file="${script_dir}/tests_inclusion_patterns"
exclusion_file="${script_dir}/tests_exclusion_patterns"
skip_file="${script_dir}/tests_skip_patterns"
tmp_tests_file="${script_dir}/new_test_cases"
files_to_delete=($inclusion_file $exclusion_file $skip_file $tmp_tests_file)

# The final test cases file.
test_cases_file="${script_dir}/test_cases.txt"

# The OpenShift e2e suite used to generate our list of tests.
suite="openshift/conformance/parallel"

function setup()
{
	trap cleanup EXIT
	# Build the binary if not found on PATH.
	#
	openshift_tests=$(build_openshift_tests) || \
		        die "Failed to build openshift-tests"

	printf "%s\n" "${filter_patterns[@]}" > "${inclusion_file}"
	printf "%s\n" "${exclude_patterns[@]}" > "${exclusion_file}"
	printf "%s\n" "${skip_patterns[@]}" > "${skip_file}"
}

function cleanup()
{
	[ "${#files_to_delete[@]}" -gt 0 ] && rm -f "${files_to_delete[@]}"
}

function print_header()
{
	cat <<-EOF
		# Copyright (c) 2020 Red Hat, Inc.
		#
		# SPDX-License-Identifier: Apache-2.0
		#
		# Auto-generated by $(basename $0) ($(date '+%Y-%m-%d'))
		#
	EOF
}

function gen_tests_file()
{
	${openshift_tests} run --dry-run $suite 2>/dev/null | \
		grep -E -f ${inclusion_file} > $tmp_tests_file

	if [ ${#exclude_patterns[@]} -gt 0 ]; then
		cat $tmp_tests_file | \
			grep -E -v -f ${exclusion_file} >> $tmp_tests_file
	fi

	if [ ${#skip_patterns[@]} -gt 0 ]; then
		cat $tmp_tests_file | \
			grep -E -v -f ${skip_file} >> $tmp_tests_file
	fi

	print_header > $test_cases_file
	# Keep it sorted and remove duplicates.
	cat $tmp_tests_file | sort -u >> $test_cases_file
}

function main()
{
	setup
	gen_tests_file
}

main "$@"
